<%
title = 'grpc'
description = 'The GRPC protocol support provided by mountebank'
%>

<% include ../../_header %>

<h1>grpc</h1>

<p>The grpc is &hellip;</p>

<h2>Imposter Creation Parameters</h2>

<table>
  <tr>
    <th>Parameter</th>
    <th>Options</th>
    <th>Required?</th>
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>protocol</code></td>
    <td><code>grpc</code></td>
    <td>Yes</td>
    <td>N/A</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><code>port</code></td>
    <td>Any valid port number</td>
    <td>No</td>
    <td>A randomly assigned port.  mountebank will return the actual value
    in the <code>POST</code> response.</td>
    <td>The port to run the imposter on.</td>
  </tr>
  <tr>
    <td><code>key</code></td>
    <td>A PEM-formatted string</td>
    <td>No</td>
    <td>A built in private key</td>
    <td>The GRPC server private key</td>
  </tr>
  <tr>
    <td><code>cert</code></td>
    <td>A PEM-formatted string</td>
    <td>No</td>
    <td>A built in self-signed certificate</td>
    <td>The GRPC server certificate</td>
  </tr>
  <tr>
    <td><code>mutualAuth</code></td>
    <td><code>true</code> or <code>false</code></td>
    <td>No</td>
    <td><code>false</code></td>
    <td>If <code>true</code>, the server will request a client certificate.
    Since the goal is simply to virtualize a server requiring mutual auth,
    invalid certificates will not be rejected.</td>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td>Any string</td>
    <td>No</td>
    <td>empty string</td>
    <td>Included in the logs, useful when multiple imposters are set up.</td>
  </tr>
  <tr>
    <td><code>protos</code></td>
    <td>Valid protocol buffer definitions</td>
    <td>No</td>
    <td>An empty array</td>
    <td>The list of protocol buffer messages and fields.</td>
  </tr>
  <tr>
    <td><code>stubs</code></td>
    <td>Valid stubs</td>
    <td>No</td>
    <td>An empty array</td>
    <td>The list of stubs responsible for matching a request and returning a
    response. We use <a
    href="https://github.com/protobufjs/protobuf.js">protobuf.js</a> for
    defining these, specifically their <a
    href="https://github.com/protobufjs/protobuf.js#using-json-descriptors">JSON
    descriptors</a>.</td>
  </tr>
  <tr>
    <td><code>defaultResponse</code></td>
    <td>A valid response</td>
    <td>No</td>
    <td><pre><code>
{
  code: grpc.status.UNIMPLEMENTED,
  message: 'unimplemented'
}
    </code></pre></td>
    <td>The default response to send if no predicate matches</td>
  </tr>
</table>

<h2>GRPC Requests</h2>

<table>
  <tr>
    <th>Field</th>
    <th>Description</th>
    <th>Type</th>
  </tr>
  <tr>
    <td><code>methodName</code></td>
    <td>The fully qualified method name, represented as
    "&lt;namespace&gt;.&lt;service&gt;.&lt;method&gt;", e.g.
    "helloworld.Greeter.SayHello".</td>
    <td>string</td>
</tr>
<tr>
    <td><code>responseType</code></td>
    <td>The fully qualified protobuf response type of the request, represented
    as "&lt;namespace&gt;.&lt;message&gt;", e.g. "helloworld.HelloReply".</td>
    <td>string</td>
  </tr>
  <tr>
    <td><code>request</code></td>
    <td>The raw GRPC request object.</td>
    <td>object</td>
  </tr>
</table>

<% include ../../_footer %>
